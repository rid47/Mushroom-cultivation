/*Connection:
 
 OLED--------------ESP32
 
  VCC--------------Vin
  GND--------------GND
  SCL--------------GPIO22
  SDA--------------GPIO21
 
*/
//if required
//Integrate interrupt for time showing from https://techtutorialsx.com/2017/09/30/esp32-arduino-external-interrupts/

#include <Wire.h>
#include <WiFi.h>
#include <time.h>
#include "RTClib.h"
RTC_DS3231 rtc;
#include <Adafruit_SSD1306.h>
#include <Adafruit_GFX.h>

// OLED display TWI address

#define OLED_ADDR   0x3C


int buttonValue,buttonPin = 12;



Adafruit_SSD1306 display(-1);// no reset pin

int hum=68;
int temp=24;
char Time0[6]="00:00";

//-----------------------Real time clock (from server)-----------------------------------//

String Clock="";
String h="";
String m="";
int hour_length;
int minute_length;
int timezone = 6; //Timezone for Dhaka UTC+6
int adjustedHour;
int adjustedMinute;
long clock_reading_interval=50000;
unsigned long previousMillis = 0;

//----------------------Real time clock (from module)-------------------------------------//


String Clock2="";
String h2="";
String m2="";
int hour_length2;
int minute_length2;

//------------------------WiFi Credentials------------------------------------------------//

char* ssid="DataSoft_WiFi";
char* password="support123";

void setup() 
{
  
  // initialize and clear display
  display.begin(SSD1306_SWITCHCAPVCC, OLED_ADDR);
  display.clearDisplay();
  Serial.begin(115200);
  Serial.println("");

  pinMode(buttonPin,INPUT_PULLUP);
  
  Serial.print("Time0:");
  Serial.println(Time0);

  setup_wifi();
  
  configTime(timezone * 3600, 0, "bd.pool.ntp.org", "bsti1.time.gov.bd");


  if (! rtc.begin()) {
    Serial.println("Couldn't find RTC");
    while (1);
  
}

for(int i=0;i<9;++i){
actual_time_server();
delay(1000);
}
adjustedHour=h.toInt();
adjustedMinute=m.toInt();
rtc.adjust(DateTime(2018, 7, 17, adjustedHour, adjustedMinute, 00));
//rtc.adjust(DateTime(2018, 7, 17, 18, 23, 00));
  
}

void loop() {
  // put your main code here, to run repeatedly:

  display_hum();
  delay(1000);
  display_temp();
  delay(1000);

  buttonValue=digitalRead(buttonPin);
  Serial.print("Button Value:");
  Serial.println(buttonValue);
  if(buttonValue==0)
  display_water_spray_time();

  unsigned long currentMillis=millis();
  if(currentMillis-previousMillis>clock_reading_interval)
  {
  previousMillis=currentMillis;  
  actual_time_rtc();
  //delay(500); 
  
  
  //Serial.print("Actual time:");
  //Serial.println(Clock);
  }
  
 
  
  
}

//-----------------------OLED DISPLAY-----------------------------------------------//

void display_hum(){
 
  display.clearDisplay();
  
  display.setTextSize(2);
  display.setTextColor(WHITE);
  display.setCursor(10,0);
  display.println("Humidity");
  display.setCursor(50,15);
  display.print(hum);
  display.print("%");
  display.display();
 
  }

void display_temp(){

   display.clearDisplay();
   display.setTextSize(2);
   display.setTextColor(WHITE);
   display.setCursor(0,0);
   display.print("Temp ");
   //display.setCursor(50,15);
   display.print(temp);
   display.print((char)247);
   display.println("C");
   display.display();
   
}

void display_water_spray_time()

{
  

   display.clearDisplay();
   display.setTextSize(1);
   display.setTextColor(WHITE);
   display.setCursor(0,0);
   display.println("Water Spray Time:");
   display.print(Time0);
   display.print(",");
   display.print(Time0);
   display.println(",");
   display.print(Time0);
   display.print(",");
   display.print(Time0);
   display.println(",");
   display.print(Time0);
   display.display();
   delay(10000);
   
}


//------------------------WiFi Setup-------------------------------------//

void setup_wifi() {
    
    delay(100);
  // We start by connecting to a WiFi network
    Serial.print("Connecting to ");
    Serial.println(ssid);
    WiFi.begin(ssid, password);
    while (WiFi.status() != WL_CONNECTED) 
    {
      delay(500);
      Serial.print(".");
    }
    randomSeed(micros());
    Serial.println("");
    Serial.println("WiFi connected");
    Serial.println("IP address: ");
    Serial.println(WiFi.localIP());
}



//--------------------------Actual time---------------------------------------------------------//

void actual_time_server(){

  time_t now;
  struct tm * timeinfo;
  time(&now);
  timeinfo = localtime(&now);
  
  h= timeinfo->tm_hour;
  m= timeinfo->tm_min;
  
  hour_length=h.length();
  minute_length=m.length();
  if(hour_length==1){
  h="0"+h;
  }
  if(minute_length==1){
  m="0"+m;
 }
  
  

  Clock=h+":"+m;
  Serial.print("Current Time:");
  Serial.println(Clock);
 
}

void actual_time_rtc(){


  DateTime now=rtc.now();
  
  h2=String(now.hour(),DEC);
  
  hour_length2=h2.length();
  if(hour_length2==1){
  h2="0"+h2;
  }
  
  m2=String(now.minute(),DEC);
  minute_length2=m2.length();
  if(minute_length2==1){
  m2="0"+m2;
  }  
  
  
  Clock2=h2+":"+m2;

  Serial.print("Clock2:");
  Serial.println(Clock2);
  
  
  if(Clock2=="165:165"){
  for(int i=0;i<5;++i){
          actual_time_server();
          delay(1000);
          }
    adjustedHour=h.toInt();
    adjustedMinute=m.toInt();
    rtc.adjust(DateTime(2018, 7, 17, adjustedHour, adjustedMinute, 00));
   
    }
  
  
delay(1000);  
 }
