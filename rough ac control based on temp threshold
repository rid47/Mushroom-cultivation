#include "WiFi.h"
#include <PubSubClient.h>
#include "DHT.h"       

#define DHTTYPE DHT11


#define dht_dpin 26
#define ACpin 12


int data1=0;
char Data2[58];
long lastMsg = 0;
int input3 = 0;

DHT dht(dht_dpin, DHTTYPE); 

// ------------------------WiFi AND MQTT credentials------------------------------------------------------//


const char* ssid = "DataSoft_WiFi";
const char* password = "support123";
//const char* mqtt_server = "broker.hivemq.com";
const char* mqtt_server = "iot.eclipse.org";
const int mqttPort = 1883;

WiFiClient espClient;
PubSubClient client(espClient);


void setup() {
  // put your setup code here, to run once:

  pinMode(ACpin,OUTPUT);
  digitalWrite(ACpin,LOW);

  pinMode(dht_dpin,INPUT);

  dht.begin();
  Serial.begin(9600);
  while (!Serial) {
    ; // wait for serial port to connect. Needed for native USB port only
  }
  setup_wifi();
  delay(10);

  client.setServer(mqtt_server,mqttPort);
  client.setCallback(callback);
  

}

void loop() {
  // put your main code here, to run repeatedly:

   if (!client.connected()) {
    reconnect();
  }
  client.loop();

  long now=millis();
  if(now-lastMsg>6000){

  lastMsg=now;

  data1=temp();
  

  String msg=""; 
  msg= msg+ data1;
  char message[68];
  msg.toCharArray(message,68);
 //Serial.println(msg);
 Serial.println(message);
 client.publish("mushroom/sensor_data",message);

 
  }

 Serial.print("Temperatue threshold:"); 
 delay(1000); 
 Serial.println(input3);
 Serial.print("Real time temperature:");
 Serial.println(data1);
 if(data1>input3)

 {
  digitalWrite(ACpin,HIGH);
  Serial.println("AC on as temperature in higher then threshold");
  }
  else
  {
    digitalWrite(ACpin,LOW);
    Serial.println("AC off");
    }

}


//-----------------------------WiFi setup----------------------------------------//

void setup_wifi() {
    delay(100);
  // We start by connecting to a WiFi network
    Serial.print("Connecting to ");
    Serial.println(ssid);
    WiFi.begin(ssid, password);
    while (WiFi.status() != WL_CONNECTED) 
    {
      delay(500);
      Serial.print(".");
    }
  randomSeed(micros());
  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
  }


//---------------------------While client not conncected---------------------------------//


void reconnect() {
  // Loop until we're reconnected
  while (!client.connected()) 
  {
    Serial.print("Attempting MQTT connection...");
    // Create a random client ID
    String clientId = "ESP32-";
    clientId += String(random(0xffff), HEX);
    // Attempt to connect
    //if your MQTT broker has clientID,username and password
    //please change following line to    if (client.connect(clientId,userName,passWord))
    if (client.connect(clientId.c_str()))
    {
      Serial.println("connected");
     //once connected to MQTT broker, subscribe command if any
      client.subscribe("mushroom/user_input");
      Serial.println("Subsribed to topic: mushroom/user_input");
      client.subscribe("mushroom/time");
      Serial.println("Subsribed to topic: mushroom/time");
      client.subscribe("mushroom/temperature_threshold");
      Serial.println("Subsribed to topic: mushroom/temperature_threshold");
      
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      // Wait 6 seconds before retrying
      delay(5000);
    }
  }
} //end reconnect()



//-----------------------Callback function-------------------------------------//

void callback(char* topic, byte* payload, unsigned int length) {
 
  Serial.print("Message arrived in topic: ");
  Serial.println(topic);
  Serial.print("length:");
  Serial.println(length);

//----------------------------Getting temperature threshold from user----------------------//


      if(strcmp(topic, "mushroom/temperature_threshold") == 0)
      {

        Serial.print("Message:");
        for (int i = 0; i < length; i++) {
        //Serial.print((char)payload[i]);
        //input=input+payload[i];
        Data2[i]=payload[i];
    }
    Serial.print("Temperature threshold:");
    Serial.println(Data2);
    String input2="";
    input2=input2+Data2;
    input3=input2.toInt(input2);
    

      }}


//---------------------Reading sensor data-------------------------------------//


int temp()
{
    
    
    int t = dht.readTemperature();         
    
   /* Serial.print("temperature = ");
    Serial.print(t); 
    Serial.println("C  ");*/
    delay(500);
    return t;
    
    }      
